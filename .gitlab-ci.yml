stages:
  - build
  - test
  - validate
  - comment
  - deploy

variables:
  PYTHON_VERSION: "3.11"
  POD_NUMBER: 8
  DOCKER_DRIVER: overlay2
  TZ: 'Europe/Amsterdam'

.cache: &cache
  key: "project-${CI_JOB_NAME}-py3.11"
  paths:
    - .cache/pip
    - yang
    - .venv/

.python_before_script: &python_before_script
  before_script:
    - pip install lxml
    - curl -sSL https://install.python-poetry.org | python3 -
    - export PATH="/root/.local/bin:$PATH"
    - poetry config virtualenvs.in-project true
    - poetry install --no-interaction --no-ansi
    - source .venv/bin/activate

.python_image: &python_image
  image: python:$PYTHON_VERSION

setup_poetry:
  <<: *python_image
  <<: *python_before_script
  cache: *cache
  stage: build
  tags:
    - ins-student
  script:
    - poetry run netaut --help

test_connection:
  stage: test
  image: appropriate/curl:latest
  tags:
    - ins-student
  script:
    - ping -c 5 sw01-pod-$POD_NUMBER.network.garden

test_commands:
  <<: *python_image
  <<: *python_before_script
  cache: *cache
  stage: test
  tags:
    - ins-student
  script:
    - poetry run netaut --help
    - poetry run netaut --pod-number $POD_NUMBER get-config
  needs: ["test_connection"]

validate_on_merge:
  <<: *python_image
  <<: *python_before_script
  cache: *cache
  stage: validate
  tags:
    - ins-student
  script:
    - echo "Running validate command on merge request"
    - VALIDATE_RESULT=$(poetry run netaut --pod-number $POD_NUMBER validate)
    - echo $VALIDATE_RESULT > ./validate_result.txt
  artifacts:
    paths:
    - validate_result.txt
  rules:
    - if: '$CI_MERGE_REQUEST_ID'
      when: always
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: always

post_comment:
  stage: comment
  image: appropriate/curl:latest
  script:
    - >
      curl --request POST --header "PRIVATE-TOKEN: {$GITLAB_ACCESS_TOKEN}" "https://gitlab.ost.ch/api/v4/projects/6996/merge_requests/6/notes" --data-urlencode "body=$(cat validate_result.txt)" -k
  rules:
    - if: '$CI_MERGE_REQUEST_ID'
      when: always
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: always
  needs: ["validate_on_merge"]

deploy:
  <<: *python_image
  <<: *python_before_script
  cache: *cache
  stage: deploy
  tags:
    - ins-student
  script:
    - poetry run netaut --pod-number $POD_NUMBER deploy
  environment: 
    name: production
  only:
    - master
  when: on_success
